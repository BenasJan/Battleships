{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.3.0.0",
        "fileVersion": "4.3.0-3.22365.10 (dd078d4e)",
        "semanticVersion": "4.3.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'friendsInit' to match pascal case naming rules, consider using 'FriendsInit'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/dev/Battleships/Battleships/Migrations/20221022102651_friendsInit.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 26,
                  "endLine": 9,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'PasswordException' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/dev/Battleships/Battleships/Data/PasswordException.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/dev/Battleships/Battleships/Data/PasswordException.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/dev/Battleships/Battleships/Data/PasswordException.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 8,
                  "endLine": 5,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/dev/Battleships/Battleships/Data/PasswordException.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 8,
                  "endLine": 5,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'PasswordException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'PasswordException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 9 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/dev/Battleships/Battleships/Repositories/BattleshipsDatabase.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 35,
                  "endLine": 16,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/dev/Battleships/Battleships/Services/Authentication/AuthenticationService.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 23,
                  "endLine": 59,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetClaimsIdentity' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/dev/Battleships/Battleships/Services/Authentication/AuthenticationService.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 32,
                  "endLine": 83,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks whether or not type names are using PascalCase. To reduce noise, two consecutive upper case characters are allowed unless they form the whole type name. So, MyXClass is compliant, but XC on its own is not.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S107": {
          "id": "S107",
          "shortDescription": "Methods should not have too many parameters",
          "fullDescription": "A long parameter list can indicate that a new structure should be created to wrap the numerous parameters or that the function is doing too many things.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-107",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General exceptions should never be thrown",
          "fullDescription": "Throwing such general exceptions as Exception, SystemException, ApplicationException, IndexOutOfRangeException, NullReferenceException, OutOfMemoryException and ExecutionEngineException prevents calling methods from handling true, system-generated exceptions differently than application-generated errors. ",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope"
            ]
          }
        },
        "S3903": {
          "id": "S3903",
          "shortDescription": "Types should be defined in named namespaces",
          "fullDescription": "Types are declared in namespaces in order to prevent name collisions and as a way to organize them into the object hierarchy. Types that are defined outside any named namespace are in a global namespace that cannot be referenced in code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3903",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3925": {
          "id": "S3925",
          "shortDescription": "\"ISerializable\" should be implemented correctly",
          "fullDescription": "The ISerializable interface is the mechanism to control the type serialization process. If not implemented correctly this could result in an invalid serialization and hard to detect bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3925",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope"
            ]
          }
        }
      }
    }
  ]
}